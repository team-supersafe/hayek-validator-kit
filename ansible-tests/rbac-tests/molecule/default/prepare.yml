---
- name: Prepare
  hosts: all
  become: true
  gather_facts: false
  vars_files:
    - "../../../../ansible/roles/iam_manager/defaults/main.yml"
  tasks:
    - name: Ensure remote tmp directory exists
      ansible.builtin.raw: mkdir -p /tmp/.ansible/tmp && chmod 1777 /tmp /tmp/.ansible /tmp/.ansible/tmp

    - name: Update apt cache
      ansible.builtin.raw: apt update -y

    - name: Install base packages
      ansible.builtin.raw: apt install -y sudo curl ca-certificates openssh-client python3 python3-apt

    - name: Verify ubuntu user was created by container startup
      ansible.builtin.shell: id ubuntu
      register: ubuntu_user_check
      changed_when: false

    - name: Debug ubuntu user creation
      ansible.builtin.debug:
        msg: "Ubuntu user exists: {{ ubuntu_user_check.stdout }}"

    - name: Verify SSH keys were configured by container startup
      ansible.builtin.stat:
        path: /home/ubuntu/.ssh/authorized_keys
      register: ssh_keys_check

    - name: Debug SSH keys setup
      ansible.builtin.debug:
        msg: "SSH keys configured: {{ ssh_keys_check.stat.exists }}"

    - name: Ensure cgroups mount bind exists (already via molecule volumes)
      ansible.builtin.stat:
        path: /sys/fs/cgroup
      register: cgroup_dir

    - name: Debug cgroup mount presence
      ansible.builtin.debug:
        msg: "cgroup mounted: {{ cgroup_dir.stat.isdir }}"

    - name: Install required packages for RBAC testing
      ansible.builtin.apt:
        name:
          - htop
          - nano
          - curl
        state: present
        update_cache: yes
      register: packages_installed

    - name: Create simple mock validator script
      ansible.builtin.copy:
        dest: /usr/local/bin/mock-validator
        content: |
          #!/bin/bash
          # Simple Mock Validator for RBAC Testing
          LOG_FILE="${1:-/home/sol/logs/agave-validator.log}"
          mkdir -p "$(dirname "$LOG_FILE")"

          # Create initial log content
          cat > "$LOG_FILE" << EOF
          [$(date -u +"%Y-%m-%dT%H:%M:%S.%9NZ")] INFO solana_validator::main > Starting Solana Validator
          [$(date -u +"%Y-%m-%dT%H:%M:%S.%9NZ")] INFO solana_validator::main > Validator startup complete
          EOF

          # Keep running and append logs periodically
          while true; do
            echo "[$(date -u +"%Y-%m-%dT%H:%M:%S.%9NZ")] INFO solana_core::validator > Processing slot $((RANDOM % 1000000))" >> "$LOG_FILE"
            sleep 10
          done
        mode: '0755'
        owner: root
        group: root

    - name: Create initial mock validator service
      ansible.builtin.copy:
        dest: /etc/systemd/system/{{ validator_service }}
        content: |
          [Unit]
          Description=Mock Solana Validator Service (Initial)
          After=network.target

          [Service]
          Type=simple
          User=root
          Group=root
          ExecStart=/bin/bash -c 'echo "Mock Solana Validator started as $(whoami)" && sleep infinity'
          ExecStop=/bin/kill -TERM $MAINPID
          Restart=always
          RestartSec=5

          [Install]
          WantedBy=multi-user.target
        mode: '0644'
        owner: root
        group: root
      register: initial_service_created

    - name: Reload systemd daemon after service creation
      ansible.builtin.systemd:
        daemon_reload: yes
      when: initial_service_created.changed
