---
# ========================================
# RBAC VERIFICATION - FINAL REPORTING AND DECISION
# ========================================

- name: Display All Violations
  ansible.builtin.debug:
    msg: "{{ item.0.name }}: VIOLATION {{ item.1.item }} ({{
      item.0.role if item.0.role != 'mixed'
      else ('validator_viewers' if item.1.item in (classified_users.validator_viewers | default([]))
            else 'validator_operators')
    }}): {{ item.1.stdout.strip() }}"
  with_subelements:
    - "{{ violation_display_matrix }}"
    - test_results
    - flags:
      skip_missing: true
  when:
    - item.1.stdout is defined
    - item.1.stdout | length > 0

- name: Build comprehensive security summary
  ansible.builtin.set_fact:
    security_summary:
      # Basic system checks
      basic_checks_passed: true

      # Positive tests summary
      positive_tests:
        total: "{{ positive_tests_summary.total_tests | default(0) }}"
        failures: "{{ positive_tests_summary.failures | default(0) }}"
        status: "{{ positive_tests_summary.status | default('UNKNOWN') }}"

      # Negative tests summary
      negative_tests:
        total: "{{ negative_tests_summary.total_tests | default(0) }}"
        violations: "{{ negative_tests_summary.violations | default(0) }}"
        users_affected: "{{ negative_tests_summary.users_affected | default(0) }}"
        status: "{{ negative_tests_summary.status | default('UNKNOWN') }}"

      # Execution tests summary
      execution_tests:
        total: "{{ execution_tests_summary.total_tests | default(0) }}"
        violations: "{{ execution_tests_summary.violations | default(0) }}"
        expected_blocks: "{{ execution_tests_summary.expected_blocks | default(0) }}"
        status: "{{ execution_tests_summary.status | default('UNKNOWN') }}"

      # Template validation summary
      template_validation:
        violations: "{{ template_validation_summary.total_violations | default(0) }}"
        status: "{{ template_validation_summary.status | default('UNKNOWN') }}"

      # Overall status calculation
      total_issues: "{{ (positive_tests_summary.failures | default(0) | int) + (negative_tests_summary.violations | default(0) | int) + (execution_tests_summary.violations | default(0) | int) + (template_validation_summary.total_violations | default(0) | int) }}"

- name: Calculate overall security status
  ansible.builtin.set_fact:
    overall_security_status: "{{ 'PASSED' if (security_summary.total_issues | int == 0) else 'FAILED' }}"

- name: Build comprehensive unified security report
  ansible.builtin.set_fact:
    violation_summary_lines: |
      {%- set lines = [] -%}

      {%- if security_summary.total_issues | int > 0 -%}
        {%- set _ = lines.append("========================================") -%}
        {%- set _ = lines.append("🚨 RBAC SECURITY VIOLATIONS DETECTED") -%}
        {%- set _ = lines.append("========================================") -%}
        {%- set _ = lines.append("") -%}
        {%- set _ = lines.append("🎯 FINAL ANSWER: SECURITY BREACH DETECTED ❌") -%}
        {%- set _ = lines.append("") -%}
        {%- set _ = lines.append("📊 EXECUTION STATISTICS:") -%}
        {%- set _ = lines.append("• Total commands tested: " + (security_summary.execution_tests.total | string)) -%}
        {%- set _ = lines.append("• Security violations found: " + (security_summary.total_issues | string)) -%}
        {%- set _ = lines.append("• Success rate: " + (((security_summary.execution_tests.total | int - security_summary.total_issues | int) / security_summary.execution_tests.total | int * 100) | round(1) | string) + "%") -%}
        {%- set _ = lines.append("") -%}

        {%- set _ = lines.append("🚨 DETAILED VIOLATION BREAKDOWN:") -%}
        {%- set _ = lines.append("• Positive test failures: " + (security_summary.positive_tests.failures | string)) -%}
        {%- set _ = lines.append("• Role hierarchy violations: " + (security_summary.negative_tests.violations | string)) -%}
        {%- set _ = lines.append("• Execution test violations: " + (security_summary.execution_tests.violations | string)) -%}
        {%- set _ = lines.append("• Template violations: " + (security_summary.template_validation.violations | string)) -%}
        {%- set _ = lines.append("• Users affected: " + (security_summary.negative_tests.users_affected | string)) -%}
        {%- set _ = lines.append("") -%}

        {%- set _ = lines.append("⚠️ ACTION REQUIRED:") -%}
        {%- set _ = lines.append("1. Review all violations listed above") -%}
        {%- set _ = lines.append("2. Fix sudoers configuration for affected users") -%}
        {%- set _ = lines.append("3. Verify role templates in /etc/sudoers.d/") -%}
        {%- set _ = lines.append("4. Re-run verification until all tests pass") -%}
        {%- set _ = lines.append("") -%}
        {%- set _ = lines.append("🛑 VERDICT: SECURITY NEEDS IMMEDIATE ATTENTION ❌") -%}
        {%- set _ = lines.append("DEPLOYMENT STATUS: BLOCKED") -%}
        {%- set _ = lines.append("DO NOT DEPLOY TO PRODUCTION UNTIL RESOLVED!") -%}
        {%- set _ = lines.append("========================================") -%}
      {%- else -%}
        {%- set _ = lines.append("========================================") -%}
        {%- set _ = lines.append("🎉 RBAC SECURITY VERIFICATION PASSED") -%}
        {%- set _ = lines.append("========================================") -%}
        {%- set _ = lines.append("") -%}
        {%- set _ = lines.append("🎯 FINAL ANSWER: ALL TESTS PASSED ✅") -%}
        {%- set _ = lines.append("") -%}
        {%- set _ = lines.append("📊 EXECUTION STATISTICS:") -%}
        {%- set _ = lines.append("• Total commands tested: " + (security_summary.execution_tests.total | string)) -%}
        {%- set _ = lines.append("• Commands successful: " + ((security_summary.execution_tests.total | int - security_summary.execution_tests.expected_blocks | int) | string)) -%}
        {%- set _ = lines.append("• Restricted commands blocked: " + (security_summary.execution_tests.expected_blocks | string)) -%}
        {%- set _ = lines.append("• Security violations found: " + (security_summary.total_issues | string)) -%}
        {%- set _ = lines.append("• Success rate: 100%") -%}
        {%- set _ = lines.append("") -%}
        {%- set _ = lines.append("✅ COMPREHENSIVE TEST RESULTS:") -%}
        {%- set _ = lines.append("• Positive tests passed: " + (security_summary.positive_tests.total | string) + " tests") -%}
        {%- set _ = lines.append("• Negative tests passed: " + (security_summary.negative_tests.total | string) + " tests") -%}
        {%- set _ = lines.append("• Execution tests passed: " + (security_summary.execution_tests.total | string) + " tests") -%}
        {%- set _ = lines.append("• sudo -n blocks: " + (security_summary.execution_tests.expected_blocks | string) + " (security working)") -%}
        {%- set _ = lines.append("• Template validation passed") -%}
        {%- set _ = lines.append("") -%}
        {%- set _ = lines.append("🛡️ SECURITY ANALYSIS:") -%}
        {%- set _ = lines.append("• All basic commands work for everyone") -%}
        {%- set _ = lines.append("• All restricted commands properly blocked") -%}
        {%- set _ = lines.append("• Admin commands work only for administrators") -%}
        {%- set _ = lines.append("• sudo -n password prompts working correctly") -%}
        {%- set _ = lines.append("• Least privilege principles enforced") -%}
        {%- set _ = lines.append("• No unauthorized access detected") -%}
        {%- set _ = lines.append("") -%}
        {%- set _ = lines.append("🎯 VERDICT: SECURITY IS OK ✅") -%}
        {%- set _ = lines.append("DEPLOYMENT STATUS: APPROVED") -%}
        {%- set _ = lines.append("System ready for production deployment.") -%}
        {%- set _ = lines.append("========================================") -%}
      {%- endif -%}
      {{ lines }}

- name: Display comprehensive unified security report
  ansible.builtin.debug:
    msg: "{{ violation_summary_lines }}"

- name: Security Check Failed
  ansible.builtin.fail:
    msg: |
      DEPLOYMENT BLOCKED: {{ security_summary.total_issues }} security issues detected

      Details:
      - Positive test failures: {{ security_summary.positive_tests.failures }}
      - Role hierarchy violations: {{ security_summary.negative_tests.violations }}
      - Execution test violations: {{ security_summary.execution_tests.violations }}
      - Template violations: {{ security_summary.template_validation.violations }}
      - Users affected: {{ security_summary.negative_tests.users_affected }}

      DO NOT DEPLOY TO PRODUCTION UNTIL RESOLVED!
  when: security_summary.total_issues | int > 0
