---
# Shows Info for hot swap validator hosts
# -------------------
# Runs a keypair status check on hosts planned for a hot swap
# Can be run before and/or after a hot swap
#
# Usage:
# ------
# Run from /ansible directory:
#
# ansible-playbook playbooks/pb_hot_swap_validator_debug.yml \
#   -i solana_two_host_operations.yml \
#   -e "source_host=host-alpha" \
#   -e "destination_host=host-bravo"

- name: Shows Info for hot swap validator hosts
  hosts: "{{ source_host }},{{ destination_host }}"
  user: "{{ solana_user }}"
  become: false

  pre_tasks:
    - name: Assert required parameters are defined
      ansible.builtin.assert:
        that:
          - source_host is defined
          - destination_host is defined
        fail_msg: >
          Missing required variables.
          Must provide:
            - source_host
            - destination_host

    - name: Check if source host keys directory exists
      ansible.builtin.stat:
        path: "{{ keys_dir }}"
      register: source_keys_dir_stat
      delegate_to: "{{ source_host }}"

    - name: Check if destination host keys directory exists
      ansible.builtin.stat:
        path: "{{ keys_dir }}"
      register: destination_keys_dir_stat
      delegate_to: "{{ destination_host }}"

    - name: Validate source host keys directory exists
      ansible.builtin.fail:
        msg: >
          Source host '{{ source_host }}' does not have a validator keys directory at '{{ keys_dir }}'.
          This indicates no validator is installed on this host.
          Please ensure a validator is properly installed before attempting to debug.
      when: not source_keys_dir_stat.stat.exists
      run_once: true

    - name: Validate destination host keys directory exists
      ansible.builtin.fail:
        msg: >
          Destination host '{{ destination_host }}' does not have a validator keys directory at '{{ keys_dir }}'.
          This indicates no validator is installed on this host.
          Please ensure a validator is properly installed before attempting to debug.
      when: not destination_keys_dir_stat.stat.exists
      run_once: true

    - name: Find validator name on source host
      ansible.builtin.find:
        paths: "{{ keys_dir }}"
        file_type: directory
      register: source_keys
      delegate_to: "{{ source_host }}"

    - name: Find validator name on destination host
      ansible.builtin.find:
        paths: "{{ keys_dir }}"
        file_type: directory
      register: destination_keys
      delegate_to: "{{ destination_host }}"

    - name: Validate source host has validator subdirectories
      ansible.builtin.fail:
        msg: >
          VALIDATION FAILED: Source host '{{ source_host }}' keys directory '{{ keys_dir }}' exists but contains no validator subdirectories.
          This indicates the validator installation is incomplete or corrupted.
          Please ensure a validator is properly installed on '{{ source_host }}' before attempting to debug.
      when: source_keys.files | length == 0
      run_once: true

    - name: Validate destination host has validator subdirectories
      ansible.builtin.fail:
        msg: >
          VALIDATION FAILED: Destination host '{{ destination_host }}' keys directory '{{ keys_dir }}' exists but contains no validator subdirectories.
          This indicates the validator installation is incomplete or corrupted.
          Please ensure a validator is properly installed on '{{ destination_host }}' before attempting to debug.
      when: destination_keys.files | length == 0
      run_once: true

    - name: Set source validator name fact
      ansible.builtin.set_fact:
        source_validator_name: "{{ source_keys.files[0].path | basename }}"
      delegate_to: "{{ source_host }}"

    - name: Set destination validator name fact
      ansible.builtin.set_fact:
        destination_validator_name: "{{ destination_keys.files[0].path | basename }}"
      delegate_to: "{{ destination_host }}"

  roles:
    - role: solana_swap_validator_debug
