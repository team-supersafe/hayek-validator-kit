---
# Check if there is sufficient disk space in the given user directory
- name: Get initial disk space
  ansible.builtin.shell: |
    df -h "{{ solana_user_dir }}" | awk 'NR==2 {print $4}'
  register: initial_space
  changed_when: false

- name: Validate df output format
  ansible.builtin.fail:
    msg: |
      Unexpected df output format. Expected a size value like '80G', got: '{{ initial_space.stdout }}'

      This may indicate that the df command output format has changed after a system update.
      Please check the current df output format by running:
        df -h "{{ solana_user_dir }}"

      The script expects the 4th column to contain available space in format like '80G', '1.5T', etc.
  when: >
    initial_space.stdout is not defined or
    initial_space.stdout == '' or
    not (initial_space.stdout | regex_match('^[0-9.]+[KMG]?$'))

- name: Print initial available space
  ansible.builtin.debug:
    msg: "Initial available space in {{ solana_user_dir }}: {{ initial_space.stdout }}"

- name: Set minimum required space (experimental)
  ansible.builtin.set_fact:
    min_required_space: "14G"  # This is an initial estimate, can be adjusted based on experience

- name: Convert initial space to bytes
  ansible.builtin.include_tasks: convert_to_bytes.yml
  vars:
    input_value: "{{ initial_space.stdout }}"
    output_var: "initial_space_bytes"

- name: Convert minimum required space to bytes
  ansible.builtin.include_tasks: convert_to_bytes.yml
  vars:
    input_value: "{{ min_required_space }}"
    output_var: "min_required_bytes"

- name: Check if available space is sufficient
  ansible.builtin.fail:
    msg: "Insufficient disk space. Available: {{ initial_space.stdout }}, Minimum required: {{ min_required_space }}"
  when: initial_space_bytes | int < min_required_bytes | int
