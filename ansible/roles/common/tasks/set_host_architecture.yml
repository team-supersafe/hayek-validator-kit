- name: Set host architecture based on system facts
  ansible.builtin.set_fact:
    host_arch: >-
      {% if ansible_architecture == 'aarch64' and ansible_os_family == 'Linux' %}
        aarch64-unknown-linux-gnu
      {% elif ansible_architecture == 'x86_64' and ansible_os_family == 'Linux' %}
        x86_64-unknown-linux-gnu
      {% elif ansible_architecture == 'x86_64' and ansible_os_family == 'Darwin' %}
        x86_64-apple-darwin
      {% elif ansible_architecture == 'arm64' and ansible_os_family == 'Darwin' %}
        aarch64-apple-darwin
      {% else %}
        unsupported
      {% endif %}

- name: Fail if architecture is unsupported
  ansible.builtin.fail:
    msg: "Unsupported architecture: {{ ansible_architecture }} on {{ ansible_os_family }}"
  when: host_arch == 'unsupported'

- name: Set build_from_source based on architecture
  ansible.builtin.set_fact:
    build_from_source: "{{ host_arch == 'aarch64-unknown-linux-gnu' }}"

- name: Print Host Architecture
  ansible.builtin.debug:
    msg: "HOST ARCH = {{ host_arch }} | build_from_source = {{ build_from_source }}"
