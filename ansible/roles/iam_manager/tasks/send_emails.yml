---
# Show message about vault password
- name: Inform about vault password
  ansible.builtin.debug:
    msg: |
      Please enter the password for the SMTP vault file ({{ vault_file }})
      This password is needed to access the email configuration.

# Read vault file for SMTP variables
- name: Read vault file
  ansible.builtin.command: ansible-vault view "{{ vault_file }}"
  register: vault_content
  delegate_to: localhost
  run_once: true
  no_log: true

# Parse email variables
- name: Parse email variables
  ansible.builtin.set_fact:
    smtp_host: "{{ vault_content.stdout | regex_search('smtp_host: (.*)', '\\1') | first }}"
    smtp_port: "{{ vault_content.stdout | regex_search('smtp_port: (.*)', '\\1') | first }}"
    smtp_username: "{{ vault_content.stdout | regex_search('smtp_username: \"(.*?)\"', '\\1') | first }}"
    smtp_password: "{{ vault_content.stdout | regex_search('smtp_password: \"(.*?)\"', '\\1') | first }}"
    smtp_from: "{{ vault_content.stdout | regex_search('smtp_from: \"(.*?)\"', '\\1') | first }}"
    smtp_from_name: "{{ vault_content.stdout | regex_search('smtp_from_name: \"(.*?)\"', '\\1') | first }}"
  delegate_to: localhost
  run_once: true
  no_log: true

# Read CSV file
- name: Read users from CSV
  ansible.builtin.read_csv:
    path: "{{ users_file }}"
    key: user
  register: users_csv
  delegate_to: localhost
  run_once: true
  no_log: true

# Send passwords via email
- name: Send passwords via email
  community.general.mail:
    host: "{{ smtp_host | default('smtp.gmail.com') }}"
    port: "{{ smtp_port | default(587) }}"
    username: "{{ smtp_username }}"
    password: "{{ smtp_password }}"
    to: "{{ item.value.email }}"
    subject: "Your server access credentials"
    body: "{{ lookup('template', 'email_credentials.j2') }}"
    from: "{{ smtp_from | default('system@example.com') }}"
    secure: starttls
    attach:
      - "/tmp/{{ item.value.user }}_password.age"
  loop: "{{ users_csv.dict | dict2items }}"
  delegate_to: localhost
  run_once: true
  no_log: true
  when:
    - smtp_username is defined
    - smtp_password is defined
    - item.value.sent_email | upper == 'TRUE'

# Clean up temporary files
- name: Clean up encrypted password files
  ansible.builtin.file:
    path: "/tmp/{{ item }}_password.age"
    state: absent
  loop: "{{ users_csv.dict.keys() | list }}"
  delegate_to: localhost
  run_once: true
  no_log: true
