---
# Configure password self-service for sysadmin users
# This implements the self-service password reset pattern for sudo users

# Create the password reset wrapper script with security questions
- name: Create password reset wrapper script
  ansible.builtin.copy:
    dest: /usr/local/sbin/reset-my-password
    content: |
      #!/usr/bin/env bash
      # Change the *calling* user's password only, protected by a per‚Äëuser security question.
      set -euo pipefail

      SEC_DIR=/etc/password-security
      FILE="$SEC_DIR/$SUDO_USER"

      # Ensure the directory exists (root‚Äëonly, 700).
      sudo mkdir -p "$SEC_DIR"
      sudo chmod 700 "$SEC_DIR"

      sha256() { printf %s "$1" | sha256sum | awk '{print $1}'; }

      # ------------------------------------------------------------------------------
      # ‚ù∂ First‚Äëtime run ‚Äì ask user to create a question + answer
      # ------------------------------------------------------------------------------
      if [[ ! -f "$FILE" ]]; then
        echo "üîê  First‚Äëtime setup: create your personal security question."
        read -rp " Question: " question
        while true; do
          read -srp " Answer (will not echo): " answer1 && echo
          read -srp " Repeat answer: "          answer2 && echo
          [[ "$answer1" == "$answer2" ]] && break
          echo "Answers don't match. Try again."
        done
        salt=$(openssl rand -hex 8)
        hash=$(sha256 "$answer1$salt")
        printf '%s,%s,%s\n' "$question" "$salt" "$hash" | sudo tee "$FILE" > /dev/null
        sudo chmod 600 "$FILE"
        echo "‚úîÔ∏è  Security question saved."
      else
        # ---------------------------------------------------------------------------
        # ‚ù∑ Validate answer
        # ---------------------------------------------------------------------------
        IFS=',' read -r question salt hash < "$FILE"
        echo "Security check ‚ûú  $question"
        read -srp " Answer: " answer && echo
        [[ $(sha256 "$answer$salt") == "$hash" ]] || { echo "‚ùå  Incorrect answer."; exit 1; }
      fi

      # ---------------------------------------------------------------------------
      # ‚ù∏ Change the password (no old‚Äëpw prompt because we run as root)
      # ---------------------------------------------------------------------------
      exec /usr/bin/passwd "$SUDO_USER"
    mode: '0755'
    owner: root
    group: root
  no_log: false

# Set immutability on the script to prevent modifications
- name: Set script immutability
  ansible.builtin.command: chattr +i /usr/local/sbin/reset-my-password
  changed_when: false
  no_log: false

# Configure sudo defaults for better password handling
- name: Configure sudo defaults for password handling
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    line: "Defaults passwd_timeout=0"
    insertafter: "^# Defaults specification"
    validate: 'visudo -cf %s'
  no_log: false

# Note: The sysadmin sudoers template now uses:
# - NOPASSWD: PASSWD_SELF (allows password reset without password)
# - ALL (requires password for all other sudo commands)
#
# This means:
# 1. Users can run 'sudo reset-my-password' without password
# 2. All other sudo commands require the user's password
# 3. Users can create their password when they want using the reset script
# 4. Additional security with personal security questions
