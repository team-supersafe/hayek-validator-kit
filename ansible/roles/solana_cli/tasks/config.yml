---
- name: Config - Refresh shell environment
  ansible.builtin.shell: |
    . "$HOME/.zshrc"
    . "$HOME/.bashrc"
    echo $PATH
  register: cli_shell_env_path
  changed_when: false
  tags: [solana_cli, config]

- name: Config - Show current PATH
  debug:
    msg: "PATH after sourcing: {{ cli_shell_env_path.stdout }}"

- name: Config - Set Solana CLI to use mainnet-beta cluster as the default cluster to connect to
  ansible.builtin.command: solana config set --url https://api.mainnet-beta.solana.com
  environment:
    PATH: "{{ cli_shell_env_path.stdout }}"
  register: solana_config_set
  changed_when: "'Config File' in solana_config_set.stdout"
  tags: [solana_cli, config]

- name: Config - Show current Solana CLI config
  ansible.builtin.command: solana config get
  environment:
    PATH: "{{ cli_shell_env_path.stdout }}"
  register: solana_config_get
  changed_when: false
  tags: [solana_cli, config]

- name: Config - Print Solana CLI config
  ansible.builtin.debug:
    msg: "Current Solana CLI config:\n{{ solana_config_get.stdout }}"
  tags: [solana_cli, config]

- name: Configure and start agave validator (if requested)
  block:
    - name: Debug - Agave validator configuration placeholder
      ansible.builtin.debug:
        msg: |
          PLACEHOLDER: Configure and start agave validator
          - Validator name: {{ validator_name }}
          - Validator type: {{ validator_type }}

          This is where we will:
          1. Create validator startup script from templates
          2. Create systemd service
          3. Configure logrotate
          4. Start the agave validator service

          Templates and service configuration will be added in future updates.
      tags: [solana_cli, config, agave_validator]
  when: install_agave_validator | default(false)
  tags: [solana_cli, config, agave_validator]
