- name: Start Building Agave message
  ansible.builtin.debug:
    msg: "Building Agave version {{ agave_version }} from source"

- name: Create solana cli releases directory
  ansible.builtin.file:
    path: "{{ solana_installed_releases_dir }}"
    state: directory
    mode: "0755"

- name: Set local variable for agave_build_dir
  ansible.builtin.set_fact:
    agave_build_dir: "{{ build_dir }}/agave"

- name: Set local variable for solana_installed_release_dir
  ansible.builtin.set_fact:
    solana_installed_release_dir: "{{ solana_installed_releases_dir }}/v{{ agave_version }}"

- name: Ensure agave_build_dir directory exists
  ansible.builtin.file:
    path: "{{ agave_build_dir }}"
    state: directory
    mode: "0755"

- name: Debug print Agave build directory
  ansible.builtin.debug:
    msg: "Agave build directory: {{ agave_build_dir }}"

- name: Prepare Agave source code (clone, sync, checkout tag)
  block:
    - name: Ensure agave version build directory exists
      ansible.builtin.file:
        path: "{{ agave_build_dir }}/agave-{{ agave_version }}"
        state: directory
        mode: "0755"

    - name: Clone or update forked Agave repo
      ansible.builtin.git:
        repo: "{{ forked_agave_repo }}.git"
        dest: "{{ agave_build_dir }}/agave-{{ agave_version }}"
        version: "v{{ agave_version }}"
        update: true
        force: true

    - name: Checkout the desired tag
      ansible.builtin.shell: |
        cd {{ agave_build_dir }}/agave-{{ agave_version }}
        git reset --hard HEAD
        git clean -fd
        git checkout v{{ agave_version }}
      args:
        executable: /bin/bash
      register: checkout_result
      failed_when: checkout_result.rc != 0
      ignore_errors: false

    - name: Fail if checkout failed
      ansible.builtin.fail:
        msg: |
          Failed to checkout tag v{{ agave_version }}. Error: {{ checkout_result.stderr | default('Unknown error') }}
      when: checkout_result.rc != 0

    - name: Read version from Cargo.toml
      ansible.builtin.shell: grep '^version' Cargo.toml | awk -F '"' '{print $2}'
      args:
        chdir: "{{ agave_build_dir }}/agave-{{ agave_version }}"
      register: cargo_toml_version
      changed_when: false

    - name: Debug Cargo.toml version
      ansible.builtin.debug:
        msg: "Cargo.toml version: {{ cargo_toml_version.stdout }} | Expected: {{ agave_version }}"

    - name: Fail if Cargo.toml version does not match agave_version
      ansible.builtin.fail:
        msg: "Cargo.toml version ({{ cargo_toml_version.stdout }}) does not match expected agave_version ({{ agave_version }})!"
      when: cargo_toml_version.stdout != agave_version
      changed_when: false
      ignore_errors: "{{ ansible_check_mode }}"

- name: Create release directory for Agave
  ansible.builtin.file:
    path: "{{ solana_installed_release_dir }}"
    state: directory
    mode: "0755"

- name: Run cargo-install-all.sh
  ansible.builtin.shell: |
    set -e
    . "{{ solana_user_dir }}/.cargo/env"
    ./scripts/cargo-install-all.sh . > {{ agave_build_dir }}/agave-build.log 2>&1
  args:
    chdir: "{{ agave_build_dir }}/agave-{{ agave_version }}"

# The above will compile the source code and create the following:
# A bin directory, .crates.toml and .crates2.json files.
- name: Move built Agave assets into the releases directory (with failure handling)
  block:
    - name: Move agave we just built into the releases directory
      ansible.builtin.shell: |
        set -e
        rm -rf {{ solana_installed_release_dir }}/*
        mv {{ agave_build_dir }}/agave-{{ agave_version }}/.crates.toml {{ solana_installed_release_dir }}
        mv {{ agave_build_dir }}/agave-{{ agave_version }}/.crates2.json {{ solana_installed_release_dir }}
        mv {{ agave_build_dir }}/agave-{{ agave_version }}/bin {{ solana_installed_release_dir }}
  rescue:
    - name: Fail if moving built assets failed
      ansible.builtin.fail:
        msg: |
          Failed to move built Agave assets to the releases directory.
          Check if .crates.toml, .crates2.json, and bin exist in {{ agave_build_dir }}/agave-{{ agave_version }}

# Create symlink to new release
- name: Create symlink to new release
  ansible.builtin.file:
    src: "{{ solana_installed_release_dir }}"
    dest: "{{ solana_user_dir }}/.local/share/solana/install/active_release"
    state: link
    force: true
