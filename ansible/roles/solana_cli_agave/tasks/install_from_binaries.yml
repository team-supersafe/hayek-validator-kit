---
- name: Set Solana Agave download URL
  ansible.builtin.set_fact:
    agave_download_url: "https://solv-store.s3.us-east-1.amazonaws.com/agave/releases/download/v{{ agave_version }}/solana-release-{{ host_arch }}.tar.bz2"

- name: Print the Agave download URL
  ansible.builtin.debug:
    msg: "Solana CLI will be downloaded from: {{ agave_download_url }}"

- name: Set local variable for solana_installed_release_dir
  ansible.builtin.set_fact:
    solana_installed_release_dir: "{{ validator_solana_installed_releases_dir }}/v{{ agave_version }}"

- name: Ensure Solana CLI releases directory exists
  ansible.builtin.file:
    path: "{{ solana_installed_release_dir }}"
    state: directory
    mode: "{{ validator_data_mode_owner_readonly }}"
    owner: "{{ solana_user }}"
    group: "{{ validator_operators_group }}"
  become: true

- name: Unarchiving solana binaries into the releases directory
  ansible.builtin.debug:
    msg: "Unarchive release directory: {{ validator_solana_installed_releases_dir }}/v{{ agave_version }}"

- name: Unarchive solana binaries
  ansible.builtin.unarchive:
    src: "{{ agave_download_url }}"
    dest: "{{ validator_solana_installed_releases_dir }}/v{{ agave_version }}"
    remote_src: true
    creates: "{{ validator_solana_installed_releases_dir }}/v{{ agave_version }}/solana-release/bin/agave-validator"
  ignore_errors: "{{ ansible_check_mode }}" # can be also: when: not ansible_check_mode

- name: Create symlink to new release
  ansible.builtin.file:
    src: "{{ validator_solana_installed_releases_dir }}/v{{ agave_version }}/solana-release"
    dest: "{{ validator_root_dir }}/install/active_release"
    state: link
    owner: "root"
    group: "{{ validator_operators_group }}"
    force: true
  become: true
