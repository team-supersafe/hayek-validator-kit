---
# install.yml - solana_set_validator_keys

- name: Stop validator service if running
  ansible.builtin.systemd:
    name: "{{ validator_service_name }}"
    state: stopped
    enabled: false
  register: validator_stop_result
  retries: 3
  delay: 10
  until: validator_stop_result is success
  become: true
  failed_when: false

- name: Stop Jito relayer service if running
  ansible.builtin.systemd:
    name: "{{ jito_relayer_service_name }}"
    state: stopped
    enabled: false
  register: relayer_stop_result
  retries: 3
  delay: 10
  until: relayer_stop_result is success
  become: true
  failed_when: false

- name: Remove existing validator keys from target host
  ansible.builtin.file:
    path: "{{ validator_keys_dir }}"
    state: absent
  become: true

- name: Ensure validator_keys_dir exists on target host
  ansible.builtin.file:
    path: "{{ validator_keys_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ solana_user }}"
    group: "{{ solana_user }}"
  become: true

- name: Copy primary-target-identity.json to target host
  ansible.builtin.copy:
    src: "{{ ansible_keys_dir }}/primary-target-identity.json"
    dest: "{{ validator_keys_dir }}/primary-target-identity.json"
    mode: '0600'
  delegate_to: localhost
  run_once: true

- name: Copy vote-account.json to target host
  ansible.builtin.copy:
    src: "{{ ansible_keys_dir }}/vote-account.json"
    dest: "{{ validator_keys_dir }}/vote-account.json"
    mode: '0600'
  delegate_to: localhost
  run_once: true

- name: Copy jito-relayer-block-eng.json to target host if it exists
  ansible.builtin.copy:
    src: "{{ ansible_keys_dir }}/jito-relayer-block-eng.json"
    dest: "{{ validator_keys_dir }}/jito-relayer-block-eng.json"
    mode: '0600'
  when: private_key_exists.stat.exists | default(false)
  delegate_to: localhost
  run_once: true
