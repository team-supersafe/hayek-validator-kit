---
- name: Get source primary target identity pubkey
  ansible.builtin.command: solana-keygen pubkey {{ source_host_staked_identity_path }}
  register: source_primary_pubkey
  environment:
    PATH: "{{ solana_install_dir }}"
  when: inventory_hostname == source_host

- name: Get source hot-spare identity pubkey
  ansible.builtin.command: solana-keygen pubkey {{ source_host_unstaked_identity_path }}
  register: source_hotspare_pubkey
  environment:
    PATH: "{{ solana_install_dir }}"
  when: inventory_hostname == source_host

- name: Get source vote account pubkey
  ansible.builtin.command: solana-keygen pubkey {{ source_vote_account_path }}
  register: source_vote_pubkey
  environment:
    PATH: "{{ solana_install_dir }}"
  when: inventory_hostname == source_host

- name: Get destination primary target identity pubkey
  ansible.builtin.command: solana-keygen pubkey {{ destination_host_staked_identity_path }}
  register: destination_primary_pubkey
  environment:
    PATH: "{{ solana_install_dir }}"
  when: inventory_hostname == destination_host

- name: Get destination hot-spare identity pubkey
  ansible.builtin.command: solana-keygen pubkey "{{ destination_host_keys_dir }}/hot-spare-identity.json"
  register: destination_hotspare_pubkey
  environment:
    PATH: "{{ solana_install_dir }}"
  when: inventory_hostname == destination_host

- name: Get destination vote account pubkey
  ansible.builtin.command: solana-keygen pubkey "{{ destination_host_keys_dir }}/vote-account.json"
  register: destination_vote_pubkey
  environment:
    PATH: "{{ solana_install_dir }}"
  when: inventory_hostname == destination_host

- name: Display Swap Operation Summary
  ansible.builtin.debug:
    msg: |
      ===============================================
      VALIDATOR SWAP OPERATION SUMMARY
      ===============================================

      Source Validator:
      - Host: {{ source_host }} ({{ source_validator_name }})
      - Primary Target Identity: {{ source_host_staked_identity_path }}
        Pubkey: {{ source_primary_pubkey.stdout }}
      - Hot-spare Identity: {{ source_host_unstaked_identity_path }}
        Pubkey: {{ source_hotspare_pubkey.stdout }}
      - Vote Account: {{ source_vote_account_path }}
        Pubkey: {{ source_vote_pubkey.stdout }}

      Destination Validator:
      - Host: {{ destination_host }} ({{ destination_validator_name }})
      - Primary Target Identity: {{ destination_host_staked_identity_path }}
        Pubkey: {{ destination_primary_pubkey.stdout }}
      - Hot-spare Identity: {{ destination_host_keys_dir }}/hot-spare-identity.json
        Pubkey: {{ destination_hotspare_pubkey.stdout }}
      - Vote Account: {{ destination_host_keys_dir }}/vote-account.json
        Pubkey: {{ destination_vote_pubkey.stdout }}

      Operation Steps:
      1. Wait for safe restart window on source validator
      2. Switch source validator to hot-spare
      3. Copy primary target identity to destination and vote account
      4. Transfer tower file to destination
      5. Switch destination to primary target identity
         (Make destination host the new primary validator)

      Please review the above information carefully.
      ===============================================

- name: Confirm Swap Operation
  ansible.builtin.pause:
    prompt: "Do you want to proceed with the validator swap? (yes/no)"
  register: swap_confirmation

- name: Fail if swap not confirmed
  ansible.builtin.fail:
    msg: "Validator swap operation cancelled by user"
  when: swap_confirmation.user_input | lower != 'yes' 