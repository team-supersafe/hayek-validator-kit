---
- name: prepare - Determine if we should cleanup the host from existing validator data
  ansible.builtin.set_fact:
    should_cleanup_host_data: "{{ force_host_cleanup | default(false) }}"

- name: prepare - Stop validator service
  block:
    - name: prepare - Check if validator service exists and is running
      ansible.builtin.systemd:
        name: "{{ validator_service_name }}"
      register: service_status
      changed_when: false
      failed_when: false

    - name: prepare - Stop validator service if running
      ansible.builtin.systemd:
        name: "{{ validator_service_name }}"
        state: stopped
        enabled: false
      register: stop_result
      retries: 3
      delay: 10
      until: stop_result is success
      when: service_status.status.ActiveState == "active"
      become: true

# Block 1: Remove parameterized logrotate config and systemd units
- name: prepare - Remove parameterized validator logrotate config and systemd units
  block:
    - name: prepare - Remove parameterized validator logrotate config if it exists
      ansible.builtin.file:
        path: "/etc/logrotate.d/{{ validator_service_name }}"
        state: absent
      become: true

    - name: prepare - Remove parameterized validator logrotate systemd service if it exists
      ansible.builtin.file:
        path: "/etc/systemd/system/validator-logrotate-{{ validator_service_name }}.service"
        state: absent
      become: true

    - name: prepare - Remove parameterized validator logrotate systemd timer if it exists
      ansible.builtin.file:
        path: "/etc/systemd/system/validator-logrotate-{{ validator_service_name }}.timer"
        state: absent
      become: true

# Block 2: Remove legacy logrotate config and systemd units (old convention)
- name: prepare - Remove legacy validator logrotate config and systemd units (backward compatibility)
  block:
    - name: prepare - Remove legacy validator logrotate config if it exists
      ansible.builtin.file:
        path: /etc/logrotate.d/validator.logrotate
        state: absent
      become: true

    - name: prepare - Remove legacy validator logrotate systemd service if it exists
      ansible.builtin.file:
        path: /etc/systemd/system/validator-logrotate.service
        state: absent
      become: true

    - name: prepare - Remove legacy validator logrotate systemd timer if it exists
      ansible.builtin.file:
        path: /etc/systemd/system/validator-logrotate.timer
        state: absent
      become: true

- name: prepare - Clear logs and key store
  ansible.builtin.shell: |
    #!/bin/bash
    set -e

    echo "Cleaning logs directory..."
    rm -rf {{ logs_dir }}/*

    echo "Cleaning scripts directory..."
    rm -rf {{ scripts_dir }}/*

    echo "Cleaning keys directory..."
    rm -rf {{ keys_dir }}/*
  delegate_to: "{{ target_host }}"

- name: prepare - Ensure logs directory exists
  ansible.builtin.file:
    path: "{{ logs_dir }}"
    state: directory
    mode: "0755"
    owner: "{{ solana_user }}"
    group: "{{ solana_user }}"
  become: true

- name: prepare - Ensure keys directory exists
  ansible.builtin.file:
    path: "{{ keys_dir }}"
    state: directory
    mode: "0755"
    owner: "{{ solana_user }}"
    group: "{{ solana_user }}"
  become: true

- name: prepare - Ensure scripts directory exists
  ansible.builtin.file:
    path: "{{ scripts_dir }}"
    state: directory
    mode: "0755"
    owner: "{{ solana_user }}"
    group: "{{ solana_user }}"
  become: true
