---
- name: Clean validator data before start
  block:
    - name: Check if validator service exists and is running
      ansible.builtin.systemd:
        name: "{{ validator_service_name }}"
      register: service_status
      changed_when: false
      failed_when: false

    - name: Stop validator service if running
      ansible.builtin.systemd:
        name: "{{ validator_service_name }}"
        state: stopped
      register: stop_result
      retries: 3
      delay: 10
      until: stop_result is success
      when: service_status.status.ActiveState == "active"
      become: true

    - name: Check if ledger directory has contents
      ansible.builtin.find:
        paths: "{{ ledger_path }}"
        patterns: "*"
      register: ledger_contents
      changed_when: false

    - name: Clean ledger directory if it has contents
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ ledger_contents.files }}"
      when: ledger_contents.files | length > 0
      become: true

    - name: Ensure ledger directory exists
      ansible.builtin.file:
        path: "{{ ledger_path }}"
        state: directory
        mode: "0755"
        owner: "{{ solana_user }}"
        group: "{{ solana_user }}"
      become: true

    - name: Check if accounts directory has contents
      ansible.builtin.find:
        paths: "{{ accounts_path }}"
        patterns: "*"
      register: accounts_contents
      changed_when: false

    - name: Clean accounts directory if it has contents
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ accounts_contents.files }}"
      when: accounts_contents.files | length > 0
      become: true

    - name: Ensure accounts directory exists
      ansible.builtin.file:
        path: "{{ accounts_path }}"
        state: directory
        mode: "0755"
        owner: "{{ solana_user }}"
        group: "{{ solana_user }}"
      become: true

    - name: Check if snapshots directory has contents
      ansible.builtin.find:
        paths: "{{ snapshots_path }}"
        patterns: "*"
      register: snapshots_contents
      changed_when: false

    - name: Clean snapshots directory if it has contents
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ snapshots_contents.files }}"
      when: snapshots_contents.files | length > 0
      become: true

    - name: Ensure snapshots directory exists
      ansible.builtin.file:
        path: "{{ snapshots_path }}"
        state: directory
        mode: "0755"
        owner: "{{ solana_user }}"
        group: "{{ solana_user }}"
      become: true

    - name: Check if logs directory has contents
      ansible.builtin.find:
        paths: "{{ logs_dir }}"
        patterns: "*"
      register: logs_contents
      changed_when: false

    - name: Clean logs directory if it has contents
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ logs_contents.files }}"
      when: logs_contents.files | length > 0
      become: true

    - name: Ensure logs directory exists
      ansible.builtin.file:
        path: "{{ logs_dir }}"
        state: directory
        mode: "0755"
        owner: "{{ solana_user }}"
        group: "{{ solana_user }}"
      become: true

  rescue:
    - name: Fail with error message
      ansible.builtin.fail:
        msg: "Failed to clean validator data. Error: {{ ansible_failed_result }}"
