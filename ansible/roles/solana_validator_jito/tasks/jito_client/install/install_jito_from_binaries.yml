---
- name: Set Jito tag
  ansible.builtin.set_fact:
    jito_tag: "v{{ jito_version }}-jito"

- name: Set download URL
  ansible.builtin.set_fact:
    solana_download_url: "https://solv-store.s3.us-east-1.amazonaws.com/jito-solana/releases/download/{{ jito_tag }}/solana-release-{{ host_arch }}.tar.bz2"

- name: Debug download information
  ansible.builtin.debug:
    msg: |
      Download Information:
      - Jito tag: {{ jito_tag }}
      - Host architecture: {{ host_arch }}
      - Download URL: {{ solana_download_url }}
      - Target file: {{ host_arch }}.tar.bz2

- name: Create temporary directory for download
  ansible.builtin.file:
    path: "{{ ansible_env.TMPDIR | default('/tmp') }}/jito-solana-{{ jito_tag }}"
    state: directory
    mode: '0755'
  register: temp_dir

- name: Download Jito-Solana binaries
  ansible.builtin.get_url:
    url: "{{ solana_download_url }}"
    dest: "{{ temp_dir.path }}/{{ host_arch }}.tar.bz2"
    mode: '0644'
    timeout: 300
  register: download_result

- name: Debug download result
  ansible.builtin.debug:
    msg: |
      Download Result:
      - Status: {{ download_result.status_code | default('unknown') }}
      - File size: {{ download_result.size | default('unknown') }}
      - File path: {{ download_result.dest | default('unknown') }}
      - Changed: {{ download_result.changed | default('unknown') }}

- name: Check downloaded file
  ansible.builtin.stat:
    path: "{{ temp_dir.path }}/{{ host_arch }}.tar.bz2"
  register: downloaded_file

- name: Debug file information
  ansible.builtin.debug:
    msg: |
      Downloaded File Info:
      - Exists: {{ downloaded_file.stat.exists }}
      - Size: {{ downloaded_file.stat.size | default('unknown') }}
      - Mode: {{ downloaded_file.stat.mode }}

- name: Create solana releases directory
  ansible.builtin.file:
    path: "{{ solana_installed_releases_dir }}/{{ jito_tag }}"
    state: directory
    mode: '0755'
    owner: "{{ solana_user }}"
    group: "{{ solana_user }}"

- name: Extract Jito-Solana binaries
  ansible.builtin.unarchive:
    src: "{{ temp_dir.path }}/{{ host_arch }}.tar.bz2"
    dest: "{{ solana_installed_releases_dir }}/{{ jito_tag }}"
    remote_src: true
    creates: "{{ solana_installed_releases_dir }}/{{ jito_tag }}/bin/agave-validator"
    owner: "{{ solana_user }}"
    group: "{{ solana_user }}"
  register: extract_result

- name: Create symlink to new release
  ansible.builtin.file:
    src: "{{ solana_installed_releases_dir }}/{{ jito_tag }}/solana-release"
    dest: "{{ solana_user_dir }}/.local/share/solana/install/active_release"
    owner: "{{ solana_user }}"
    group: "{{ solana_user }}"
    state: link
    force: true

- name: Verify Jito-Solana installation
  ansible.builtin.command: "{{ solana_install_dir }}/solana --version"
  register: version_check
  changed_when: false
  failed_when: jito_version not in version_check.stdout

- name: Clean up temporary directory
  ansible.builtin.file:
    path: "{{ temp_dir.path }}"
    state: absent
  when: temp_dir is defined

- name: Installation complete
  ansible.builtin.debug:
    msg: "Jito-Solana {{ jito_version }} has been successfully installed"
