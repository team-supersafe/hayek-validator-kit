---
- name: DEBUG
  ansible.builtin.debug:
    msg: "Creating Jito Relayer build"

- name: Set local variable for jito_relayer_build_dir
  ansible.builtin.set_fact:
    jito_relayer_build_dir: "{{ build_dir }}/jito_relayer"

- name: Ensure jito_relayer_build_dir directory exists
  ansible.builtin.file:
    path: "{{ jito_relayer_build_dir }}"
    state: directory
    mode: "0755"

- name: Require git
  become: true
  ansible.builtin.package:
    name: git
    state: present

- name: Clone jito-relayer repository
  ansible.builtin.git:
    repo: https://github.com/jito-foundation/jito-relayer.git
    dest: "{{ jito_relayer_build_dir }}"
    version: "master"
    recursive: true
    update: true

- name: Update git submodules
  ansible.builtin.shell: |
    git submodule update -i -r
  args:
    chdir: "{{ jito_relayer_build_dir }}"

- name: Checkout Jito Relayer version
  ansible.builtin.shell: |
    git checkout tags/v{{ jito_relayer_version }}
  args:
    chdir: "{{ jito_relayer_build_dir }}"

- name: Verify git status after checkout
  ansible.builtin.shell: |
    git status
  args:
    chdir: "{{ jito_relayer_build_dir }}"

- name: Find out if file {{ jito_relayer_build_dir }}/target/release/jito-transaction-relayer exists
  ansible.builtin.stat:
    path: "{{ jito_relayer_build_dir }}/target/release/jito-transaction-relayer"
  register: build_target_stat

- name: Show build status message
  ansible.builtin.debug:
    msg: >-
      {% if not jito_relayer_force_build and build_target_stat.stat.exists %}
      Skipping build: existing Jito Relayer build found at {{ jito_relayer_build_dir }}/target/release and jito_relayer_force_build is not set.
      {% else %}
      Starting build process for Jito Relayer
      {% endif %}

- block:
    - name: Build Jito Relayer
      ansible.builtin.shell: |
        set -e
        . $HOME/.cargo/env
        cargo b --release > {{ jito_relayer_build_dir }}/build.log 2>&1
      args:
        chdir: "{{ jito_relayer_build_dir }}"

    - name: Jito Relayer build completed
      ansible.builtin.debug:
        msg: "Jito Relayer build completed. Build directory: {{ jito_relayer_build_dir }}"
  when: jito_relayer_force_build or (not build_target_stat.stat.exists)

# Activate build

- name: Remove existing release directory if present
  ansible.builtin.file:
    path: "{{ jito_relayer_installed_releases_dir }}/v{{ jito_relayer_version }}"
    state: absent

- name: Create a release directory for the new target
  ansible.builtin.file:
    path: "{{ jito_relayer_installed_releases_dir }}/v{{ jito_relayer_version }}"
    state: directory
    mode: "0755"

- name: Copy built binaries to release directory
  ansible.builtin.copy:
    src: "{{ jito_relayer_build_dir }}/target/release/"
    dest: "{{ jito_relayer_installed_releases_dir }}/v{{ jito_relayer_version }}/"
    remote_src: yes
    mode: "0755"

- name: Update active release symlink
  ansible.builtin.file:
    src: "{{ jito_relayer_installed_releases_dir }}/v{{ jito_relayer_version }}"
    dest: "{{ jito_relayer_install_dir }}"
    state: link
    force: true

- block:
  - name: Ensure active release path is in .bashrc
    ansible.builtin.lineinfile:
      path: "$HOME/.bashrc"
      line: 'export PATH="{{ jito_relayer_install_dir }}:$PATH"'
      create: yes
      state: present

  - name: Ensure active release path is in .zshrc
    ansible.builtin.lineinfile:
      path: "$HOME/.zshrc"
      line: 'export PATH="{{ jito_relayer_install_dir }}:$PATH"'
      create: yes
      state: present

- name: Save updated PATH for checking
  ansible.builtin.shell: |
    . "$HOME/.zshrc"
    . "$HOME/.bashrc"
    echo $PATH
  register: updated_path
  changed_when: false

- name: Show modified PATH
  debug:
    msg: "PATH after sourcing: {{ updated_path.stdout }}"

- name: Verify jito-transaction-relayer installation
  ansible.builtin.shell: |
    which jito-transaction-relayer
  environment:
    PATH: "{{ updated_path.stdout }}"
  register: relayer_path_check

- name: Check jito-transaction-relayer version
  ansible.builtin.shell: |
    jito-transaction-relayer --version
  environment:
    PATH: "{{ updated_path.stdout }}"
  register: relayer_version_check
  failed_when: jito_relayer_version not in relayer_version_check.stdout

- name: Debug relayer path
  ansible.builtin.debug:
    msg: "{{ relayer_path_check.stdout }}"

- name: Debug relayer version
  ansible.builtin.debug:
    msg: "{{ relayer_version_check.stdout }}"

# Now that the build is complete, we can remove the build directory
# - name: Remove build directory after copy
#   ansible.builtin.file:
#     path: "{{ jito_relayer_build_dir }}"
#     state: absent
