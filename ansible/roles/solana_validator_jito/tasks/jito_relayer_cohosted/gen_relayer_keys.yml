---
- name: Ensure validator_keys_dir exists
  ansible.builtin.file:
    path: "{{ validator_keys_dir }}"
    state: directory
    mode: '0755'
  tags: [jito_relayer, check.keys]

- name: Check if Jito Relayer Block Engine key exists in ansible_keys_dir
  ansible.builtin.stat:
    path: "{{ ansible_keys_dir }}/jito-relayer-block-eng.json"
  register: local_key_exists
  delegate_to: localhost
  run_once: true

- name: Copy Jito Relayer Block Engine key from ansible_keys_dir if it exists
  ansible.builtin.copy:
    src: "{{ ansible_keys_dir }}/jito-relayer-block-eng.json"
    dest: "{{ validator_keys_dir }}/jito-relayer-block-eng.json"
    mode: '0600'
  when: local_key_exists.stat.exists
  tags: [jito_relayer, check.keys]

- name: Install - Gen Comms Keys - Get stats of the RSA private key
  ansible.builtin.stat:
    path: "{{ validator_keys_dir }}/jito-relayer-comms-pvt.pem"
  register: comms_private_key
  tags:
    - check.keys

- name: Install - Gen Comms Keys - Generate comms RSA private key
  when:
    - not comms_private_key.stat.exists | default(false)
  ansible.builtin.shell: |
    openssl genrsa --out {{ validator_keys_dir }}/jito-relayer-comms-pvt.pem 2048
  args:
    creates: "{{ validator_keys_dir }}/jito-relayer-comms-pvt.pem"
  tags:
    - gen.keys.private

- name: Install - Gen Comms Keys - Generate comms RSA public key
  ansible.builtin.shell: |
    openssl rsa --in {{ validator_keys_dir }}/jito-relayer-comms-pvt.pem --pubout --out {{ validator_keys_dir }}/jito-relayer-comms-pub.pem
  args:
    creates: "{{ validator_keys_dir }}/jito-relayer-comms-pub.pem"
  tags:
    - gen.keys.public

# These tasks runs on the target host to check for the deployed key and generate it if needed

- name: Install - Gen Block Engine keys - Print key generation directory (target host)
  ansible.builtin.debug:
    msg: "Generating Jito Relayer Block Engine key in {{ validator_keys_dir }}"

- name: Install - Gen Block Engine keys - Check if Jito Relayer Block Engine private key exists
  ansible.builtin.stat:
    path: "{{ validator_keys_dir }}/jito-relayer-block-eng.json"
  register: private_key_exists

- name: Install - Gen Block Engine keys - Get current env PATH value
  ansible.builtin.shell: |
    . "$HOME/.zshrc"
    . "$HOME/.bashrc"
    echo $PATH
  register: cli_shell_env_path
  changed_when: false

- name: Install - Gen Block Engine keys - Generate Block Engine key pair
  when:
    - validator_keys_dir is defined
    - force_keygen | default(false) or not private_key_exists.stat.exists | default(false)
    - not local_key_exists.stat.exists
  ansible.builtin.shell: |
    solana-keygen new --no-passphrase --outfile {{ validator_keys_dir }}/jito-relayer-block-eng.json
  environment:
    PATH: "{{ cli_shell_env_path.stdout }}"
  args:
    creates: "{{ validator_keys_dir }}/jito-relayer-block-eng.json"
  register: keygen_result
  tags:
    - gen.keys.private

- name: Install - Gen Block Engine keys - Fail if Block Engine key generation failed
  ansible.builtin.fail:
    msg: "Block Engine key generation failed: {{ keygen_result.stderr }}"
  when:
    - keygen_result is defined
    - keygen_result.rc is defined
    - keygen_result.rc != 0
    - force_keygen | default(false) or not private_key_exists.stat.exists | default(false)

- name: Install - Gen Block Engine keys - Get Block Engine public key
  ansible.builtin.shell: |
    solana-keygen pubkey {{ validator_keys_dir }}/jito-relayer-block-eng.json
  environment:
    PATH: "{{ cli_shell_env_path.stdout }}"
  register: block_engine_public_key

- name: Install - Gen Block Engine keys - Print Jito Relayer Block Engine public key path
  ansible.builtin.debug:
    msg: "Jito Relayer Block Engine private key generated at: {{ validator_keys_dir }}/jito-relayer-block-eng.json"
  when:
    - force_keygen | default(false) or not private_key_exists.stat.exists | default(false)

- name: Install - Gen Block Engine keys - Print Jito Relayer Block Engine public key
  ansible.builtin.debug:
    msg: "Jito Relayer Block Engine public key: {{ block_engine_public_key.stdout }}"
  tags:
    - gen.keys.public
